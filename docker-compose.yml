version: '3'

services:

  db:
    container_name: postgresql_db
    image: postgres
    # automatically restarts the container - Docker daemon on restart or 
    # the container itself is manually restarted
    restart: always

    volumes:
      - ./data/db:/var/lib/postgresql/data

    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: django_vite
    ports:
      - "5432:5432"
    healthcheck:
      test: "exit 0"
    networks:
      app_net:
        ipv4_address: 192.168.0.2

  web:
    build: .
    volumes:
      - .:/web
    container_name: django_vite_container
    restart: always

    ports:
      - 8000:8000
    image: web:django_vite
    command: sh -c "python manage.py search_index --rebuild -f && python manage.py runserver 0.0.0.0:8000"
    # command: sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
      esearch:
        condition: service_healthy

    networks:
      app_net:
        ipv4_address: 192.168.0.5

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always

    volumes:
      - ./data/pgadmin-data:/var/lib/pgadmin

    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
      # PGADMIN_LISTEN_PORT = 80
    ports:
      - "5050:80"
    networks:
      app_net:
        ipv4_address: 192.168.0.3

  esearch:
    container_name: e_search
    image: elasticsearch:7.17.4
    environment:
      - discovery.type=single-node

    ports:
      - "9200:9200"
      - "9300:9300"
    links:
      - db:db

    healthcheck:
      test: "exit 0"
    volumes:
      # - elasticsearch-data-volume:/usr/share/elasticsearch/data
      - es-volume-7.17.4:/usr/share/elasticsearch/data

    networks:
      app_net:
        ipv4_address: 192.168.0.4

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"
          gateway: 192.168.0.1

volumes:
  es-volume-7.17.4:
    driver: local
